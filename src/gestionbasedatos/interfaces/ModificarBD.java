/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package gestionbasedatos.interfaces;

import gestionbasedatos.clases.AdminBDListaNegra;
import gestionbasedatos.clases.Eventos;
import gestionbasedatos.clases.ListaNegra;
import gestionbasedatos.clases.Usuario;
import java.awt.Image;
import java.awt.Toolkit;
import java.awt.event.KeyEvent;
import java.util.Calendar;
import java.util.GregorianCalendar;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.RowFilter;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableRowSorter;

/**
 *
 * @author m2 <linuxitos@gmail.com>
 */
public class ModificarBD extends javax.swing.JFrame {

    ListaNegra registro;
    AdminBDListaNegra adminLista = new AdminBDListaNegra();
    ListaNegra registroModificar;
    ListaNegra registroEliminar;
    LoginBD login;
    Usuario usr;
    int filaSeleTablaPaciente;
    Eventos lista[];
    DefaultTableModel dm;
    /**
     * Creates new form ModificarBD
     */
    public ModificarBD() {
        initComponents();
        setLocationRelativeTo(null);
        adminLista.cargarRegistrosTablas(jtableConsultas, usr.getIduser());
        adminLista.cargarRegistrosTablas(jtableEliminar, usr.getIduser());
        adminLista.cargarRegistrosTablas(jtableModificar, usr.getIduser());
        Image icon3 = Toolkit.getDefaultToolkit().getImage(getClass().getResource("../images/favicon.png"));
        setIconImage(icon3);
        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            @Override
            public void windowClosing(java.awt.event.WindowEvent evt) {
                close();
            }
        });
        //dm = (DefaultTableModel) jtableConsultas.getModel();
    }
    
    public ModificarBD(LoginBD log, Usuario user) {
        initComponents();
        setLocationRelativeTo(null);
        login = log;
        usr = user;
        adminLista.cargarRegistrosTablas(jtableConsultas, usr.getIduser());
        adminLista.cargarRegistrosTablas(jtableModificar, usr.getIduser());
        adminLista.cargarRegistrosTablas(jtableEliminar, usr.getIduser());
        Image icon3 = Toolkit.getDefaultToolkit().getImage(getClass().getResource("../images/favicon.png"));
        setIconImage(icon3);
        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            @Override
            public void windowClosing(java.awt.event.WindowEvent evt) {
                close();
            }
        });
        //dm = (DefaultTableModel) jtableConsultas.getModel();
        setUserData();
        Calendar diaHoy = new GregorianCalendar();
        jdateFechaEvento.setCalendar(diaHoy);
        adminLista.cargarTodosEventosEnTabla(jtableFechas, user.getIduser());
        jlblEventoSelec.setText("Ningún registro seleccionado");
        adminLista.obtenerImagenUsuario(jlblImage, user);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jlblUserInf = new javax.swing.JLabel();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel2 = new javax.swing.JPanel();
        jtxtNombre = new javax.swing.JTextField();
        jtxtRazon = new javax.swing.JTextField();
        jbGuardar = new javax.swing.JButton();
        jcboxEdad = new javax.swing.JComboBox();
        jLabel2 = new javax.swing.JLabel();
        jPanel4 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jtableConsultas = new javax.swing.JTable();
        jtxtBuscarNombre = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jPanel5 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jtableModificar = new javax.swing.JTable();
        jbModicarSeleccionado = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        jtableEliminar = new javax.swing.JTable();
        jbEliminarSeleccionado = new javax.swing.JButton();
        jPanel6 = new javax.swing.JPanel();
        jcomboBoxTipoEvento = new javax.swing.JComboBox<>();
        jtxtDescripEvento = new javax.swing.JTextField();
        jbuttonGuardarEvento = new javax.swing.JButton();
        jdateFechaEvento = new com.toedter.calendar.JDateChooser();
        jScrollPane4 = new javax.swing.JScrollPane();
        jtableFechas = new javax.swing.JTable();
        jbuttonEliminar = new javax.swing.JButton();
        jbuttonModificar = new javax.swing.JButton();
        jlblEventoSelec = new javax.swing.JLabel();
        jbSalir = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        jlblNameReal = new javax.swing.JLabel();
        jbConf = new javax.swing.JButton();
        jlblImage = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);

        jlblUserInf.setFont(new java.awt.Font("Lato Light", 0, 24)); // NOI18N
        jlblUserInf.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jlblUserInf.setText("Bienvenido de nuevo: nomuser");

        jtxtNombre.setText("Ingresa el nombre");
        jtxtNombre.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jtxtNombreFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                jtxtNombreFocusLost(evt);
            }
        });
        jtxtNombre.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jtxtNombreKeyPressed(evt);
            }
        });

        jtxtRazon.setText("Ingresa la razón");
        jtxtRazon.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jtxtRazonFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                jtxtRazonFocusLost(evt);
            }
        });
        jtxtRazon.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jtxtRazonKeyPressed(evt);
            }
        });

        jbGuardar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestionbasedatos/png/48x48/add.png"))); // NOI18N
        jbGuardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbGuardarActionPerformed(evt);
            }
        });

        jcboxEdad.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "28", "29", "30", "31", "32", "33", "34", "35", "36", "37", "38", "39", "40" }));
        jcboxEdad.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jcboxEdadKeyPressed(evt);
            }
        });

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestionbasedatos/png/32x32/add_page.png"))); // NOI18N

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addGap(53, 53, 53)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jbGuardar, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addGap(1, 1, 1)
                        .addComponent(jtxtNombre, javax.swing.GroupLayout.PREFERRED_SIZE, 175, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jtxtRazon, javax.swing.GroupLayout.PREFERRED_SIZE, 264, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jcboxEdad, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(80, 80, 80))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(70, 70, 70)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jtxtNombre)
                    .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jtxtRazon)
                    .addComponent(jcboxEdad))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jbGuardar, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(126, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Altas", jPanel2);

        jtableConsultas.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Identificador", "Nombre", "Razón", "Edad"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jtableConsultas.getTableHeader().setReorderingAllowed(false);
        jScrollPane1.setViewportView(jtableConsultas);

        jtxtBuscarNombre.setText("Ingresa el nombre a buscar");
        jtxtBuscarNombre.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jtxtBuscarNombreFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                jtxtBuscarNombreFocusLost(evt);
            }
        });
        jtxtBuscarNombre.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jtxtBuscarNombreKeyReleased(evt);
            }
        });

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestionbasedatos/png/32x32/search.png"))); // NOI18N

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 676, Short.MAX_VALUE)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(2, 2, 2)
                        .addComponent(jtxtBuscarNombre, javax.swing.GroupLayout.PREFERRED_SIZE, 274, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jtxtBuscarNombre, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 196, Short.MAX_VALUE)
                .addContainerGap())
        );

        jTabbedPane1.addTab("Consultas", jPanel4);

        jtableModificar.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Identificador", "Nombre", "Razón", "Edad"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jtableModificar.getTableHeader().setReorderingAllowed(false);
        jtableModificar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jtableModificarMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(jtableModificar);

        jbModicarSeleccionado.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestionbasedatos/png/32x32/refresh.png"))); // NOI18N
        jbModicarSeleccionado.setText("Modificar seleccionado");
        jbModicarSeleccionado.setEnabled(false);
        jbModicarSeleccionado.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbModicarSeleccionadoActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 676, Short.MAX_VALUE)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addComponent(jbModicarSeleccionado, javax.swing.GroupLayout.PREFERRED_SIZE, 272, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addComponent(jbModicarSeleccionado)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 182, Short.MAX_VALUE)
                .addContainerGap())
        );

        jTabbedPane1.addTab("Modificaciones", jPanel5);

        jtableEliminar.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Identificador", "Nombre", "Razón", "Edad"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jtableEliminar.getTableHeader().setReorderingAllowed(false);
        jtableEliminar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jtableEliminarMouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(jtableEliminar);

        jbEliminarSeleccionado.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestionbasedatos/png/32x32/delete_page.png"))); // NOI18N
        jbEliminarSeleccionado.setText("Eliminar seleccionado");
        jbEliminarSeleccionado.setEnabled(false);
        jbEliminarSeleccionado.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbEliminarSeleccionadoActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 676, Short.MAX_VALUE)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jbEliminarSeleccionado, javax.swing.GroupLayout.PREFERRED_SIZE, 272, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addComponent(jbEliminarSeleccionado)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 182, Short.MAX_VALUE)
                .addContainerGap())
        );

        jTabbedPane1.addTab("Bajas", jPanel3);

        jcomboBoxTipoEvento.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Fecha Cualquiera", "Aniversario", "Cita", "Cumpleaños" }));

        jtxtDescripEvento.setText("Descripción del evento");
        jtxtDescripEvento.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jtxtDescripEventoKeyPressed(evt);
            }
        });

        jbuttonGuardarEvento.setText("Guardar");
        jbuttonGuardarEvento.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbuttonGuardarEventoActionPerformed(evt);
            }
        });

        jdateFechaEvento.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jdateFechaEventoKeyPressed(evt);
            }
        });

        jtableFechas.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Tipo evento", "Descripción", "Fecha"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jtableFechas.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jtableFechasMouseClicked(evt);
            }
        });
        jScrollPane4.setViewportView(jtableFechas);
        if (jtableFechas.getColumnModel().getColumnCount() > 0) {
            jtableFechas.getColumnModel().getColumn(0).setMinWidth(120);
            jtableFechas.getColumnModel().getColumn(0).setPreferredWidth(120);
            jtableFechas.getColumnModel().getColumn(0).setMaxWidth(150);
            jtableFechas.getColumnModel().getColumn(1).setResizable(false);
            jtableFechas.getColumnModel().getColumn(2).setMinWidth(100);
            jtableFechas.getColumnModel().getColumn(2).setPreferredWidth(120);
            jtableFechas.getColumnModel().getColumn(2).setMaxWidth(140);
        }

        jbuttonEliminar.setText("Eliminar");
        jbuttonEliminar.setEnabled(false);
        jbuttonEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbuttonEliminarActionPerformed(evt);
            }
        });

        jbuttonModificar.setText("Modificar");
        jbuttonModificar.setEnabled(false);
        jbuttonModificar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbuttonModificarActionPerformed(evt);
            }
        });

        jlblEventoSelec.setText("Seleccionado");

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane4)
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addComponent(jcomboBoxTipoEvento, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jtxtDescripEvento, javax.swing.GroupLayout.PREFERRED_SIZE, 262, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jdateFechaEvento, javax.swing.GroupLayout.DEFAULT_SIZE, 151, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jbuttonGuardarEvento, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel6Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jlblEventoSelec, javax.swing.GroupLayout.PREFERRED_SIZE, 394, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jbuttonModificar, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jbuttonEliminar, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jcomboBoxTipoEvento, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jtxtDescripEvento, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jdateFechaEvento, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jbuttonGuardarEvento))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 174, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jbuttonEliminar)
                    .addComponent(jbuttonModificar)
                    .addComponent(jlblEventoSelec))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Fechas Importantes", jPanel6);

        jbSalir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestionbasedatos/png/48x48/delete.png"))); // NOI18N
        jbSalir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbSalirActionPerformed(evt);
            }
        });

        jButton1.setFont(new java.awt.Font("Open Sans Light", 0, 24)); // NOI18N
        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestionbasedatos/png/48x48/help.png"))); // NOI18N
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jlblNameReal.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jlblNameReal.setText("jLabel1");

        jbConf.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestionbasedatos/png/32x32/process.png"))); // NOI18N
        jbConf.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbConfActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jTabbedPane1)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jlblImage, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(29, 29, 29)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(jlblNameReal, javax.swing.GroupLayout.PREFERRED_SIZE, 258, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jlblUserInf, javax.swing.GroupLayout.PREFERRED_SIZE, 376, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jbConf)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jbSalir, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jlblNameReal)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jbSalir, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jbConf, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jlblUserInf, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(24, 24, 24)
                        .addComponent(jlblImage, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jTabbedPane1)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    public JLabel getJlblImage() {
        return jlblImage;
    }

    public void setJlblImage(JLabel jlblImage) {
        this.jlblImage = jlblImage;
    }
    
    public void setUserData(){
        jlblUserInf.setText("Bienvenido de nuevo: "+usr.getNick());
        jlblNameReal.setText(usr.getNombre()+" "+usr.getApellidos());
    }
    
    private void close(){
        if (JOptionPane.showConfirmDialog(rootPane, "¿Desea cerrar sesión?",
        "Cerrar sesión", JOptionPane.YES_NO_OPTION) == JOptionPane.YES_OPTION){
            /*si la respuesta es sí, entonces lo regresa a la interfaz de login*/
            login.setVisible(true);
            this.dispose();
        }
    }
    
    private void filtro(String consulta, JTable jtableBuscar){
        dm = (DefaultTableModel) jtableBuscar.getModel();
        TableRowSorter<DefaultTableModel> tr = new TableRowSorter<>(dm);
        jtableBuscar.setRowSorter(tr);
        tr.setRowFilter(RowFilter.regexFilter(consulta));
    }
    
    private void jbSalirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbSalirActionPerformed
        close();
    }//GEN-LAST:event_jbSalirActionPerformed

    private void jbGuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbGuardarActionPerformed
        if(jtxtNombre.getText().length()>0 && jtxtRazon.getText().length()>0){
            registro = new ListaNegra();
            registro.setEdad(Integer.parseInt(jcboxEdad.getSelectedItem().toString()));
            registro.setIduser(usr.getIduser());
            registro.setNombre(jtxtNombre.getText().toUpperCase());
            registro.setRazon(jtxtRazon.getText().toUpperCase());
            boolean guardado = adminLista.GuardarNuevoRegistro(registro);
            if(guardado){
                adminLista.borrarContenidoTabla(jtableConsultas);
                adminLista.cargarRegistrosTablas(jtableConsultas, usr.getIduser());
                adminLista.borrarContenidoTabla(jtableEliminar);
                adminLista.cargarRegistrosTablas(jtableEliminar, usr.getIduser());
                adminLista.borrarContenidoTabla(jtableModificar);
                adminLista.cargarRegistrosTablas(jtableModificar, usr.getIduser());
                JOptionPane.showMessageDialog(null, "El registro ha sido guardado exitosamente.","Información", JOptionPane.INFORMATION_MESSAGE);
            }else{
                JOptionPane.showMessageDialog(null, "Ocurrió un eror al guardar el registro","Error", JOptionPane.ERROR_MESSAGE);
            }
        }else{
            JOptionPane.showMessageDialog(null, "Los campos no pueden ser vacíos","Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_jbGuardarActionPerformed

    private void jtxtNombreFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jtxtNombreFocusGained
        jtxtNombre.setText("");
    }//GEN-LAST:event_jtxtNombreFocusGained

    private void jtxtNombreFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jtxtNombreFocusLost
        if(jtxtNombre.getText().equals("")){
            jtxtNombre.setText("Ingresa el nombre");
        }
    }//GEN-LAST:event_jtxtNombreFocusLost

    private void jtxtRazonFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jtxtRazonFocusGained
        jtxtRazon.setText("");
    }//GEN-LAST:event_jtxtRazonFocusGained

    private void jtxtRazonFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jtxtRazonFocusLost
        if(jtxtRazon.getText().equals("")){
            jtxtRazon.setText("Ingresa la razón");
        }
    }//GEN-LAST:event_jtxtRazonFocusLost

    private void jtxtNombreKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtxtNombreKeyPressed
        if (evt.getKeyCode()==KeyEvent.VK_ENTER) {
            jbGuardar.doClick();
        }
    }//GEN-LAST:event_jtxtNombreKeyPressed

    private void jtxtRazonKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtxtRazonKeyPressed
        if (evt.getKeyCode()==KeyEvent.VK_ENTER) {
            jbGuardar.doClick();
        }
    }//GEN-LAST:event_jtxtRazonKeyPressed

    private void jtxtBuscarNombreFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jtxtBuscarNombreFocusGained
        jtxtBuscarNombre.setText("");
    }//GEN-LAST:event_jtxtBuscarNombreFocusGained

    private void jtxtBuscarNombreFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jtxtBuscarNombreFocusLost
        if(jtxtBuscarNombre.getText().equals("")){
            jtxtBuscarNombre.setText("Ingresa el nombre a buscar");
        }
    }//GEN-LAST:event_jtxtBuscarNombreFocusLost

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        AcercaDe acerca = new AcercaDe(this, true);
        acerca.setVisible(true);
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jtableModificarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jtableModificarMouseClicked
        int filaSeleTabla=jtableModificar.getSelectedRow();
        if(filaSeleTabla!=-1){
            jbModicarSeleccionado.setEnabled(true);
            registroModificar = new ListaNegra();
            registroModificar.setId(Integer.parseInt(jtableModificar.getValueAt(filaSeleTabla,0).toString()));
            registroModificar.setEdad(Integer.parseInt(jtableModificar.getValueAt(filaSeleTabla,3).toString()));
            registroModificar.setNombre(jtableModificar.getValueAt(filaSeleTabla,1).toString());
            registroModificar.setRazon(jtableModificar.getValueAt(filaSeleTabla,2).toString());
        }else{
            jbModicarSeleccionado.setEnabled(false);
        }
        if(evt.getClickCount()==2){
            filaSeleTabla=jtableModificar.getSelectedRow();
            if(filaSeleTabla!=-1){
                jbModicarSeleccionado.setEnabled(true);
                registroModificar = new ListaNegra();
                registroModificar.setId(Integer.parseInt(jtableModificar.getValueAt(filaSeleTabla,0).toString()));
                registroModificar.setEdad(Integer.parseInt(jtableModificar.getValueAt(filaSeleTabla,3).toString()));
                registroModificar.setNombre(jtableModificar.getValueAt(filaSeleTabla,1).toString());
                registroModificar.setRazon(jtableModificar.getValueAt(filaSeleTabla,2).toString());
                ModificarRegistro nuevoModi = new ModificarRegistro(this, true, registroModificar);
                nuevoModi.setVisible(true);
                adminLista.borrarContenidoTabla(jtableConsultas);
                adminLista.cargarRegistrosTablas(jtableConsultas, usr.getIduser());
                adminLista.borrarContenidoTabla(jtableEliminar);
                adminLista.cargarRegistrosTablas(jtableEliminar, usr.getIduser());
                adminLista.borrarContenidoTabla(jtableModificar);
                adminLista.cargarRegistrosTablas(jtableModificar, usr.getIduser());
            }else{
                jbModicarSeleccionado.setEnabled(false);
            }
        }
    }//GEN-LAST:event_jtableModificarMouseClicked

    private void jbModicarSeleccionadoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbModicarSeleccionadoActionPerformed
        ModificarRegistro nuevoModi = new ModificarRegistro(this, true, registroModificar);
        nuevoModi.setVisible(true);
        adminLista.borrarContenidoTabla(jtableConsultas);
        adminLista.borrarContenidoTabla(jtableEliminar);
        adminLista.borrarContenidoTabla(jtableModificar);
        adminLista.cargarRegistrosTablas(jtableConsultas, usr.getIduser());
        adminLista.cargarRegistrosTablas(jtableEliminar, usr.getIduser());
        adminLista.cargarRegistrosTablas(jtableModificar, usr.getIduser());
    }//GEN-LAST:event_jbModicarSeleccionadoActionPerformed

    private void jtableEliminarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jtableEliminarMouseClicked
        int filaSeleTabla=jtableEliminar.getSelectedRow();
        if(filaSeleTabla!=-1){
            jbEliminarSeleccionado.setEnabled(true);
            registroEliminar = new ListaNegra();
            registroEliminar.setId(Integer.parseInt(jtableEliminar.getValueAt(filaSeleTabla,0).toString()));
            registroEliminar.setEdad(Integer.parseInt(jtableEliminar.getValueAt(filaSeleTabla,3).toString()));
            registroEliminar.setNombre(jtableEliminar.getValueAt(filaSeleTabla,1).toString());
            registroEliminar.setRazon(jtableEliminar.getValueAt(filaSeleTabla,2).toString());
        }else{
            jbEliminarSeleccionado.setEnabled(false);
        }
    }//GEN-LAST:event_jtableEliminarMouseClicked

    private void jbEliminarSeleccionadoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbEliminarSeleccionadoActionPerformed
        int confirmado = JOptionPane.showConfirmDialog(this,"Estaras seguro");
        if (JOptionPane.OK_OPTION == confirmado){
            adminLista.eliminarRegistros(registroEliminar);
            /*actualizar las tablas en las que se muestra la información de la base de datos*/
            adminLista.borrarContenidoTabla(jtableConsultas);
            adminLista.borrarContenidoTabla(jtableEliminar);
            adminLista.borrarContenidoTabla(jtableModificar);
            adminLista.cargarRegistrosTablas(jtableConsultas, usr.getIduser());
            adminLista.cargarRegistrosTablas(jtableEliminar, usr.getIduser());
            adminLista.cargarRegistrosTablas(jtableModificar, usr.getIduser());
        }else{
            System.out.println("Eliminación cancelada.");
        }
    }//GEN-LAST:event_jbEliminarSeleccionadoActionPerformed

    private void jcboxEdadKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jcboxEdadKeyPressed
        if (evt.getKeyCode()==KeyEvent.VK_ENTER) {
            jbGuardar.doClick();
        }
    }//GEN-LAST:event_jcboxEdadKeyPressed

    private void jbConfActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbConfActionPerformed
        ConfCuenta conNueva = new ConfCuenta(login, true, usr, this);
        conNueva.setVisible(true);
        setUserData();
    }//GEN-LAST:event_jbConfActionPerformed

    private void jbuttonEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbuttonEliminarActionPerformed
        if(filaSeleTablaPaciente!=-1){
            lista = adminLista.obtenerTodosEventosDeUnUsuario(usr.getIduser());
            adminLista.eliminarUnEvento(lista[filaSeleTablaPaciente]);
            adminLista.borrarContenidoTabla(jtableFechas);
            adminLista.cargarTodosEventosEnTabla(jtableFechas, usr.getIduser());
            jbuttonEliminar.setEnabled(false);
            jbuttonModificar.setEnabled(false);
            jlblEventoSelec.setText("Ningún registro seleccionado");
        }
    }//GEN-LAST:event_jbuttonEliminarActionPerformed

    private void jdateFechaEventoKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jdateFechaEventoKeyPressed
        if (evt.getKeyCode()==KeyEvent.VK_ENTER) {
            jbuttonGuardarEvento.doClick();
        }
    }//GEN-LAST:event_jdateFechaEventoKeyPressed

    private void jbuttonGuardarEventoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbuttonGuardarEventoActionPerformed
        if(!jtxtDescripEvento.getText().equals("Descripción del evento")){
            Eventos nuevoEvento = new Eventos();
            nuevoEvento.setId_user(Integer.toString(usr.getIduser()));
            nuevoEvento.setTipo_evento(jcomboBoxTipoEvento.getSelectedItem().toString());
            nuevoEvento.setDesc_evento(jtxtDescripEvento.getText().toUpperCase());
            /*Guardar fecha en formato de cadena*/
            nuevoEvento.setFecha_evento(Long.toString(jdateFechaEvento.getDate().getTime()));
            adminLista.guardarUnEvento(nuevoEvento);
            JOptionPane.showMessageDialog(null, "Evento registrado correctamente.","Información", JOptionPane.INFORMATION_MESSAGE);
            adminLista.borrarContenidoTabla(jtableFechas);
            adminLista.cargarTodosEventosEnTabla(jtableFechas, usr.getIduser());
        }else{
            JOptionPane.showMessageDialog(null, "Ingresa una descripción para el evento.","Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_jbuttonGuardarEventoActionPerformed

    private void jtxtDescripEventoKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtxtDescripEventoKeyPressed
        if (evt.getKeyCode()==KeyEvent.VK_ENTER) {
            jbuttonGuardarEvento.doClick();
        }
    }//GEN-LAST:event_jtxtDescripEventoKeyPressed

    private void jtableFechasMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jtableFechasMouseClicked
        filaSeleTablaPaciente=jtableFechas.getSelectedRow();
        if(filaSeleTablaPaciente!=-1){
            jbuttonModificar.setEnabled(true);
            jbuttonEliminar.setEnabled(true);
            jlblEventoSelec.setText("Fila seleccionada: "+(filaSeleTablaPaciente+1));
        }else{
            jbuttonModificar.setEnabled(false);
            jbuttonEliminar.setEnabled(false);
            jlblEventoSelec.setText("Ningún registro seleccionado");
        }
        if(evt.getClickCount()==2){
            filaSeleTablaPaciente=jtableFechas.getSelectedRow();
            if(filaSeleTablaPaciente!=-1){
                lista = adminLista.obtenerTodosEventosDeUnUsuario(usr.getIduser());
                ModificarEvento nueModi = new ModificarEvento(this, true, lista[filaSeleTablaPaciente]);
                nueModi.setVisible(true);
                adminLista.borrarContenidoTabla(jtableFechas);
                adminLista.cargarTodosEventosEnTabla(jtableFechas, usr.getIduser());
                jbuttonEliminar.setEnabled(false);
                jbuttonModificar.setEnabled(false);
                jlblEventoSelec.setText("Ningún registro seleccionado");
            }else{
                jbuttonModificar.setEnabled(false);
                jbuttonEliminar.setEnabled(false);
                jlblEventoSelec.setText("Ningún registro seleccionado");
            }
        }
    }//GEN-LAST:event_jtableFechasMouseClicked

    private void jbuttonModificarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbuttonModificarActionPerformed
        if(filaSeleTablaPaciente!=-1){
            lista = adminLista.obtenerTodosEventosDeUnUsuario(usr.getIduser());
            ModificarEvento nueModi = new ModificarEvento(this, true, lista[filaSeleTablaPaciente]);
            nueModi.setVisible(true);
            adminLista.borrarContenidoTabla(jtableFechas);
            adminLista.cargarTodosEventosEnTabla(jtableFechas, usr.getIduser());
            jbuttonEliminar.setEnabled(false);
            jbuttonModificar.setEnabled(false);
            jlblEventoSelec.setText("Ningún registro seleccionado");
        }
    }//GEN-LAST:event_jbuttonModificarActionPerformed

    private void jtxtBuscarNombreKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtxtBuscarNombreKeyReleased
        
        /*Filtrado por desde la tabla directamente*/
        filtro(jtxtBuscarNombre.getText().toUpperCase(), jtableConsultas);
        
        /*Filtrado desde la base de datos*/
        /*adminLista.cargarRegistrosTablasMientrasEscribe(jtableConsultas, 
        jtxtBuscarNombre.getText(), usr.getIduser());*/
    }//GEN-LAST:event_jtxtBuscarNombreKeyReleased


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JButton jbConf;
    private javax.swing.JButton jbEliminarSeleccionado;
    private javax.swing.JButton jbGuardar;
    private javax.swing.JButton jbModicarSeleccionado;
    private javax.swing.JButton jbSalir;
    private javax.swing.JButton jbuttonEliminar;
    private javax.swing.JButton jbuttonGuardarEvento;
    private javax.swing.JButton jbuttonModificar;
    private javax.swing.JComboBox jcboxEdad;
    private javax.swing.JComboBox<String> jcomboBoxTipoEvento;
    private com.toedter.calendar.JDateChooser jdateFechaEvento;
    private javax.swing.JLabel jlblEventoSelec;
    private javax.swing.JLabel jlblImage;
    private javax.swing.JLabel jlblNameReal;
    private javax.swing.JLabel jlblUserInf;
    private javax.swing.JTable jtableConsultas;
    private javax.swing.JTable jtableEliminar;
    private javax.swing.JTable jtableFechas;
    private javax.swing.JTable jtableModificar;
    private javax.swing.JTextField jtxtBuscarNombre;
    private javax.swing.JTextField jtxtDescripEvento;
    private javax.swing.JTextField jtxtNombre;
    private javax.swing.JTextField jtxtRazon;
    // End of variables declaration//GEN-END:variables
}